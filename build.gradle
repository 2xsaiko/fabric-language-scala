buildscript {
	repositories {
		jcenter()
		maven {
			name = "Fabric"
			url = "http://maven.fabricmc.net"
		}
	}
	dependencies {
		classpath "net.fabricmc:fabric-loom:0.0.1-SNAPSHOT"
	}
}

plugins {
	id "scala"
	id "idea"
	id "maven"
	id "com.github.johnrengelman.shadow" version "1.2.3"
	id "net.minecrell.licenser" version "0.2.1"
}

apply plugin: "net.fabricmc.loom"

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
	version = mc_version
	fabricVersion = fabric_version
}

license {
	header file("HEADER")
	include "**/*.scala"
}

repositories {
	jcenter()
}

dependencies {
	runtime "org.scala-lang:scala-library:${scala_version}"
	compile "org.scala-lang:scala-library:${scala_version}"
}

shadowJar {
	classifier = ""
}

tasks.build.dependsOn shadowJar

artifacts {
	archives shadowJar
}

uploadArchives {
	repositories {
		mavenDeployer {
			if (project.hasProperty('mavenPass')) {
				repository(url: 'http://mavenupload.modmuss50.me/') {
					authentication(userName: 'buildslave', password: project.getProperty('mavenPass'))
				}
			} else {
			   repository(url: 'file:///var/www/maven/')
			}

			pom {
				artifactId = project.archivesBaseName

				project {
					name = project.name
					description = project.description
					packaging = 'jar'
					url = project.url

					scm {
						url = project.url
						connection = 'scm:git:git@github.com:FabricMC/fabric-language-scala.git'
						developerConnection = 'scm:git:git@github.com:FabricMC/fabric-language-scala.git'
					}

					issueManagement {
						system = 'GitHub'
						url = 'https://github.com/FabricMC/fabric-language-scala/issues'
					}

					licenses {
						license {
							name = 'Apache License 2.0'
							url = 'https://github.com/FabricMC/fabric-language-scala/blob/master/LICENSE'
							distribution = 'repo'
						}
					}

					developers {
						developer {
							id = 'shadowfacts'
							name = 'shadowfacts'
							roles { role 'developer' }
						}
					}
				}
			}
		}
	}
}